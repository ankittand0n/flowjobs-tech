# In this Docker Compose example, it assumes that you maintain a reverse proxy externally (or chose not to).
# The only two exposed ports here are from minio (:9000) and the app itself (:3000).
# If these ports are changed, ensure that the env vars passed to the app are also changed accordingly.

version: "3.8"

services:
  # Database (Postgres)
  # postgres:
  #   image: postgres:16-alpine
  #   restart: unless-stopped
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:-postgres}
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Storage (for image uploads)
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    command: server /data
    ports:
      - "${STORAGE_PORT:-9000}:9000"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${STORAGE_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${STORAGE_SECRET_KEY:-minioadmin}

  # Chrome Browser (for printing and previews)
  chrome:
    image: ghcr.io/browserless/chromium:v2.18.0 # Upgrading to newer versions causes issues
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      TIMEOUT: 10000
      CONCURRENT: 10
      TOKEN: ${CHROME_TOKEN:-chrome_token}
      EXIT_ON_HEALTH_FAILURE: "true"
      PRE_REQUEST_HEALTH_CHECK: "true"

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NX_CLOUD_ACCESS_TOKEN=${NX_CLOUD_ACCESS_TOKEN}
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      - minio
      - chrome
    environment:
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      PUBLIC_URL: ${PUBLIC_URL:-http://localhost:3000}
      STORAGE_URL: ${STORAGE_URL:-http://localhost:9000/default}
      CHROME_TOKEN: ${CHROME_TOKEN:-chrome_token}
      CHROME_URL: ws://chrome:3000
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/postgres}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-access_token_secret}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-refresh_token_secret}
      MAIL_FROM: ${MAIL_FROM:-noreply@localhost}
      STORAGE_ENDPOINT: minio
      STORAGE_PORT: 9000
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY:-minioadmin}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY:-minioadmin}
      STORAGE_USE_SSL: "false"
      STORAGE_SKIP_BUCKET_CHECK: "false"
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS}

volumes:
  minio_data:
